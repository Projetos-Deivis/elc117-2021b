/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package br.ufsm.leagueoflanguages;

import java.util.List;
import java.util.Comparator;


public class AppCLI {

  public static void main(String[] args) throws Exception {
    // Very simple command line processing, no error/exception handling
    // For more advanced command line parsing, see Apache Commons CLI or Picocli
    switch(args[0]) {
      case "saveLanguage": 
        saveLanguage(args);
        break;
      case "findAllLanguages":
        findAllLanguages();
        break;
      default:
        System.out.println("Invalid operation: " + args[0]);
    }
  }

  public static void saveLanguage(String[] args) throws Exception {
    String languageId = args[1];
    String firstAppeared = args[2];
    String paradigm = args[3];
    String userId = args[4];
    Language lang = new Language(languageId, firstAppeared, paradigm, userId);
    LanguageRepository repository = new LanguageRepository();
    String result = repository.save(lang);
    System.out.println(result);
  }

  private static void findAllLanguages() throws Exception {
    LanguageRepository repository = new LanguageRepository();
    List<Language> languages = repository.findAll();
    languages.sort(Comparator.comparing(Language::getFirstAppeared));
    for (Language lang: languages) {
      System.out.println(lang);
    }
  }

}

